import{a as e,n as o,r as t}from"./newStorage.js";const a=t;async function n(e,t){try{const r=await o.getAllEmojiGroups();let i=r.find(e=>"ungrouped"===e.id);if(i||(i={id:"ungrouped",name:"未分组",icon:"📦",order:999,emojis:[]},r.push(i)),i.emojis.find(o=>o.url===e.url))return void t({success:!1,error:"此表情已存在于未分组中"});let c=e.url;try{if(c&&c.includes("i.pximg.net")){const o=a();let t=null;o&&o.storage&&o.storage.local&&(t=await new Promise(e=>{o.storage.local.get(["lastDiscourse"],o=>e(o))}));const s=t&&t.lastDiscourse?t.lastDiscourse:null;if(s&&s.base)try{const o=await async function(e,o,t){const{discourseBase:a,cookie:n,csrf:s,mimeType:r}=t,i=await fetch(e,{method:"GET",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","Accept-Language":"zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6","Cache-Control":"max-age=0"},referrer:"https://www.pixiv.net/",referrerPolicy:"no-referrer-when-downgrade",cache:"no-cache",redirect:"follow"});if(!i.ok)throw new Error(`failed to download image: ${i.status}`);const c=await i.arrayBuffer(),l=new Blob([new Uint8Array(c)],{type:r||"image/png"}),d=new FormData;d.append("upload_type","composer"),d.append("relativePath","null"),d.append("name",o),d.append("type",l.type),d.append("file",l,o);const u=`${a.replace(/\/$/,"")}/uploads.json?client_id=f06cb5577ba9410d94b9faf94e48c2d8`,p={};s&&(p["X-Csrf-Token"]=s),n&&(p.Cookie=n);const g=await fetch(u,{method:"POST",headers:p,body:d,credentials:"include"});if(!g.ok){const e=await g.json().catch(()=>null),o=new Error("upload failed");throw o.details=e,o}return await g.json()}(c,e.name||"image.png",{discourseBase:s.base,cookie:s.cookie,csrf:s.csrf,mimeType:void 0});o&&o.url&&(c=o.url)}catch(n){}}}catch(s){}const l={id:`emoji-${Date.now()}-${Math.random().toString(36).slice(2,8)}`,packet:Date.now(),name:e.name,url:c,groupId:"ungrouped",addedAt:Date.now()};i.emojis.push(l),await o.setAllEmojiGroups(r),console.log("[Background] 成功添加表情到未分组:",l.name),t({success:!0,message:"表情已添加到未分组"})}catch(r){console.error("[Background] 添加表情失败:",r),t({success:!1,error:r instanceof Error?r.message:"添加失败"})}}async function s(e,t){try{const{arrayData:r,filename:i,mimeType:c,name:l,originUrl:d}=e.payload||{};if(console.debug("[Background] handleUploadAndAddEmoji received payload",{filename:i,mimeType:c,name:l,length:Array.isArray(r)?r.length:void 0}),!Array.isArray(r)||0===r.length)return void t({success:!1,error:"No arrayData provided"});const u=new Uint8Array(r),p=new Blob([u],{type:c||"application/octet-stream"});let g=null;try{const e=a();let o="",t="";if(e&&e.cookies)try{o=(await e.cookies.getAll({domain:"linux.do"})).map(e=>`${e.name}=${e.value}`).join("; ")}catch(n){console.warn("[Background] failed to get linux.do cookies",n)}if(e&&e.tabs)try{const o=await e.tabs.query({url:"https://linux.do/*"});for(let a=0;a<o.length;a++){const n=o[a];if(n&&n.id)try{const o=await e.tabs.sendMessage(n.id,{type:"GET_CSRF_TOKEN"});if(o&&o.csrfToken){t=o.csrfToken;break}}catch(s){continue}}}catch(n){console.warn("[Background] failed to query linux.do tabs for CSRF token",n)}const r=await p.arrayBuffer(),c=await async function(e){if("undefined"==typeof crypto||!crypto.subtle)return null;try{const o=await crypto.subtle.digest("SHA-1",e);return Array.from(new Uint8Array(o)).map(e=>e.toString(16).padStart(2,"0")).join("")}catch(n){return null}}(r)||"",l=new File([p],i||"image",{type:p.type}),d=new FormData;d.append("upload_type","composer"),d.append("relativePath","null"),d.append("name",l.name),d.append("type",l.type),c&&d.append("sha1_checksum",c),d.append("file",l,l.name);const u={};t&&(u["X-Csrf-Token"]=t),o&&(u.Cookie=o);const m=await fetch("https://linux.do/uploads.json?client_id=f06cb5577ba9410d94b9faf94e48c2d8",{method:"POST",headers:u,body:d});if(m.ok){const e=await m.json();e&&e.url&&(g=e.url)}else try{const e=await m.json().catch(()=>null);console.warn("[Background] linux.do upload response not ok",m.status,e)}catch(n){console.warn("[Background] linux.do upload non-ok and no JSON body",n)}}catch(n){console.warn("[Background] upload to linux.do failed, will fallback to data/object URL",n)}g||(g=await new Promise(e=>{try{const o=new FileReader;o.onload=()=>e("string"==typeof o.result?o.result:null),o.onerror=()=>e(null),o.readAsDataURL(p)}catch(n){console.warn("[Background] failed to create dataURL from blob",n),e(null)}})||URL.createObjectURL(p));const m=await o.getAllEmojiGroups();let f=m.find(e=>"ungrouped"===e.id);f||(f={id:"ungrouped",name:"未分组",icon:"📦",order:999,emojis:[]},m.push(f));const w={id:`emoji-${Date.now()}-${Math.random().toString(36).slice(2,8)}`,packet:Date.now(),name:l||i||"image",url:g,groupId:"ungrouped",originUrl:d||void 0,addedAt:Date.now()};f.emojis.push(w),await o.setAllEmojiGroups(m),console.log("[Background] handleUploadAndAddEmoji added emoji to ungrouped",w.name),t({success:!0,url:g,added:!0})}catch(r){console.error("[Background] handleUploadAndAddEmoji failed",r),t({success:!1,error:r instanceof Error?r.message:String(r)})}}console.log("Emoji Extension Background script loaded."),function(){const o=a();o&&o.runtime&&o.runtime.onInstalled&&o.runtime.onInstalled.addListener(async o=>{console.log("Emoji extension installed/updated:",o.reason),"install"===o.reason&&await async function(){const o=a();if(o&&o.storage)try{const a=await o.storage.local.get(["emojiGroups","appSettings"]);if(!a.emojiGroups){try{const t=await e();await o.storage.local.set({emojiGroups:t&&t.length?t:[]})}catch(t){await o.storage.local.set({emojiGroups:[]})}console.log("Default emoji groups initialized")}a.appSettings||(await o.storage.local.set({appSettings:{imageScale:100,defaultGroup:"nachoneko",showSearchBar:!0,gridColumns:4}}),console.log("Default app settings initialized"))}catch(n){console.error("Failed to initialize default data:",n)}else console.error("Chrome storage API not available")}()})}(),function(){const e=a();e&&e.runtime&&e.runtime.onMessage&&e.runtime.onMessage.addListener((e,t,r)=>{if(console.log("Background received message:",e),e.type)switch(e.type){case"GET_EMOJI_DATA":return async function(e){try{const t=await o.getAllEmojiGroups();e({success:!0,data:{groups:t||[],settings:await o.getSettings()||{},favorites:await o.getFavorites()||[]}})}catch(t){console.error("Failed to get emoji data via newStorageHelpers:",t),e({success:!1,error:t instanceof Error?t.message:"Unknown error"})}}(r),!0;case"GET_EMOJI_SETTING":return e.key?(async function(e,t){try{const a=await o.getSettings();a&&Object.prototype.hasOwnProperty.call(a,e)?t({success:!0,data:{value:a[e]}}):t({success:!0,data:{value:null}})}catch(a){console.error("Failed to get emoji setting:",e,a),t({success:!1,error:a instanceof Error?a.message:"Unknown error"})}}(e.key,r),!0):(r({success:!1,error:"Missing key for GET_EMOJI_SETTING"}),!1);case"SAVE_EMOJI_DATA":return async function(e,o){const t=a();if(t&&t.storage)try{await t.storage.local.set(e),o({success:!0})}catch(n){console.error("Failed to save emoji data:",n),o({success:!1,error:n instanceof Error?n.message:"Unknown error"})}else o({success:!1,error:"Chrome storage API not available"})}(e.data,r),!0;case"SYNC_SETTINGS":return async function(e,o){const t=a();if(t&&t.storage&&t.tabs)try{const a=Date.now(),n={data:{...e,lastModified:a},timestamp:a};await t.storage.local.set({appSettings:n});const s=await t.tabs.query({});for(const o of s)o.id&&t.tabs.sendMessage(o.id,{type:"SETTINGS_UPDATED",settings:e}).catch(()=>{});o({success:!0})}catch(n){console.error("Failed to sync settings:",n),o({success:!1,error:n instanceof Error?n.message:"Unknown error"})}else o({success:!1,error:"Chrome API not available"})}(e.settings,r),!0;case"REQUEST_LINUX_DO_AUTH":return async function(e){const o=a();if(o&&o.tabs&&o.cookies)try{const a=(await o.cookies.getAll({domain:"linux.do"})).map(e=>`${e.name}=${e.value}`).join("; ");let s="";try{const e=await o.tabs.query({url:"https://linux.do/*"});if(e.length>0&&e[0].id)try{const t=await o.tabs.sendMessage(e[0].id,{type:"GET_CSRF_TOKEN"});t&&t.csrfToken&&(s=t.csrfToken)}catch(t){for(let a=1;a<e.length;a++)if(e[a].id)try{const t=await o.tabs.sendMessage(e[a].id,{type:"GET_CSRF_TOKEN"});if(t&&t.csrfToken){s=t.csrfToken;break}}catch(n){continue}s||console.warn("Failed to get CSRF token from any linux.do tab:",t)}else console.warn("No linux.do tabs found")}catch(n){console.warn("Failed to get CSRF token from linux.do tab:",n)}e({success:!0,csrfToken:s,cookies:a})}catch(s){console.error("Failed to get linux.do auth info:",s),e({success:!1,error:s instanceof Error?s.message:"Unknown error"})}else e({success:!1,error:"Chrome API not available"})}(r),!0;default:return console.log("Unknown message type:",e.type),e.type,r({success:!1,error:"Unknown message type"}),!1}if(e.action)switch(e.action){case"addToFavorites":return async function(e,t){try{const s=await o.getAllEmojiGroups();s.find(e=>"favorites"===e.id)||(console.warn("Favorites group not found - creating one"),s.unshift({id:"favorites",name:"Favorites",icon:"⭐",order:0,emojis:[]}));const r=s,i=r.find(e=>"favorites"===e.id),c=Date.now(),l=i.emojis.findIndex(o=>o.url===e.url);if(-1!==l){const e=i.emojis[l];if(c-(e.lastUsed||0)<432e5)e.usageCount=(e.usageCount||0)+1;else{const o=e.usageCount||1;e.usageCount=Math.floor(.8*o)+1,e.lastUsed=c}}else{const o={...e,id:`fav-${Date.now()}-${Math.random().toString(36).slice(2,8)}`,groupId:"favorites",usageCount:1,lastUsed:c,addedAt:c};i.emojis.push(o)}i.emojis.sort((e,o)=>(o.lastUsed||0)-(e.lastUsed||0)),await o.setAllEmojiGroups(r);const d=a();if(d&&d.storage&&d.storage.local)try{await new Promise((e,o)=>{d.storage.local.set({emojiGroups:r},()=>{d.runtime.lastError?o(d.runtime.lastError):e()})})}catch(n){}t({success:!0,message:"Added to favorites"})}catch(s){console.error("Failed to add emoji to favorites:",s),t({success:!1,error:s instanceof Error?s.message:"Unknown error"})}}(e.emoji,r),!0;case"addEmojiFromWeb":return n(e.emojiData,r),!0;case"uploadAndAddEmoji":return s(e,r),!0;default:return console.log("Unknown action:",e.action),e.action,r({success:!1,error:"Unknown action"}),!1}console.log("Message has no type or action:",e),r({success:!1,error:"Message has no type or action"})})}(),function(){const e=a();e&&e.storage&&e.storage.onChanged&&e.storage.onChanged.addListener((e,o)=>{console.log("Storage changed:",e,o)})}(),function(){const e=a();e&&e.runtime&&e.runtime.onInstalled&&e.contextMenus&&(e.runtime.onInstalled.addListener(async()=>{try{const o=await e.storage.local.get("appSettings");let t=!1;o.appSettings&&(o.appSettings.data&&"object"==typeof o.appSettings.data?t=o.appSettings.data.forceMobileMode||!1:"object"==typeof o.appSettings&&(t=o.appSettings.forceMobileMode||!1)),e.contextMenus&&e.contextMenus.create&&(e.contextMenus.create({id:"open-emoji-options",title:"表情管理",contexts:["page"]}),e.contextMenus.create({id:"force-mobile-mode",title:"强制使用移动模式",type:"checkbox",checked:t,contexts:["page"]}))}catch(o){console.error("Error setting up context menu:",o)}}),e.contextMenus.onClicked&&e.contextMenus.onClicked.addListener(async(o,t)=>{if("open-emoji-options"===o.menuItemId&&e.runtime&&e.runtime.openOptionsPage)e.runtime.openOptionsPage();else if("force-mobile-mode"===o.menuItemId){const t=o.checked;try{const o=await e.storage.local.get("appSettings");let a={};o.appSettings&&(o.appSettings.data&&"object"==typeof o.appSettings.data?a=o.appSettings.data:"object"==typeof o.appSettings&&(a=o.appSettings));const n=Date.now(),s={data:{...a,forceMobileMode:t,lastModified:n},timestamp:n};await e.storage.local.set({appSettings:s})}catch(a){console.error("Error updating force mobile mode setting:",a)}}}))}(),setInterval(async()=>{const e=a();if(e&&e.storage)try{(await e.storage.local.get(["emojiGroups"])).emojiGroups&&console.log("Storage cleanup check completed")}catch(o){console.error("Storage cleanup error:",o)}},864e5);